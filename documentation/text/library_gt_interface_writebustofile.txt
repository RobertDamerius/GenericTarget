<h1>Write Bus To File</h1>
<h3>Library</h3>
<span style="font-family: Courier New">GenericTarget / Interface / Write Bus To File</span>

<h3>Description</h3>
Write a complete bus signal to a file. During simulation this block has no effect. Internally a digital
clock is used as timestamp. The number of samples to be written into a single file can be specified.
A sample indicates a data vector of all signals in the bus and the timestamp for one sample time point.


<h2>Input Ports</h2>
<h3>bus</h3>
Connect a bus signal to this input port.
The bus may only consist of nested buses and build-in data types and data types that are supported by simulink byte pack blocks, such as <code>boolean, uint8, int8, uint16, int16, uint32, int32, single, double</code>.


<h2>Block Parameters</h2>
The following table shows all block parameters.
<table>
    <tr><th>Parameter Name</th><th>Description</th></tr>
    <tr><td style="font-family: Courier New;">strID</td><td>Unique ID for this data recording.</td></tr>
    <tr><td style="font-family: Courier New;">numSamplesPerFile</td><td>The maximum number of samples per data recording file.</td></tr>
    <tr><td style="font-family: Courier New;">SampleTime</td><td>Sampletime.</td></tr>
</table>


<h3>Bus Signal</h3>
When the update button in the block mask is clicked, the input bus signal is analyzed.
The Simulink model is compiled once to determine the data types and dimensions of the signals, so the model must be error-free.
The bus structure, including signal names, data types, and dimensions, is then reconstructed.
The block uses this information to adjust internally by selecting and serializing all the signals from the bus.

<div class="note-green">
<h3 class="note-green">Note</h3>
If structural changes are made to the bus, then this block must be updated again via the block mask.
</div>

<h3>Unique ID</h3>
The data is uniquely identified by an ID via the block mask.
The ID corresponds to a string, which is finally used for the file name of the recording file.
An ID may only occur once in the model.
The initialization of a target application fails, if the ID is not unique.

<h3>Data Recorder</h3>
In the generic target core a separate thread takes over the actual writing of the data into the recording file.
For each ID a separate thread is created.
All data recording threads have the same priority, which is defined by the parameter <a href="packages_gt_generictarget.html#priorityDataRecorder">priorityDataRecorder</a> of the <a href="packages_gt_generictarget.html">GT.GenericTarget</a> class.
Via the block mask, the parameter <code>numSamplesPerFile</code> is used to specify how many samples are to be written to a file before a new file is created.
A sample contains a timestamp, which corresponds to the simulation time (digital clock), as well as all values of the bus at this sampling step.

